// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaPortal.Infrastructure.Context;

namespace PizzaPortal.Migrations
{
    [DbContext(typeof(PizzaPortalContext))]
    partial class PizzaPortalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("PizzaPortal.Infrastructure.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<DateTime>("DateOfCreation");

                    b.Property<DateTime>("DateOfUpdate");

                    b.Property<string>("Street");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("PizzaPortal.Infrastructure.Image", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Data");

                    b.Property<DateTime>("DateOfCreation");

                    b.Property<DateTime>("DateOfUpdate");

                    b.Property<long?>("PizzaTemplatesId");

                    b.HasKey("Id");

                    b.HasIndex("PizzaTemplatesId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("PizzaPortal.Infrastructure.Ingredient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateOfCreation");

                    b.Property<DateTime>("DateOfUpdate");

                    b.Property<string>("IngredientName");

                    b.Property<string>("IngredientPrice");

                    b.Property<long?>("PizzaTemplatesId");

                    b.HasKey("Id");

                    b.HasIndex("PizzaTemplatesId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("PizzaPortal.Infrastructure.PizzaTemplates", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateOfCreation");

                    b.Property<DateTime>("DateOfUpdate");

                    b.Property<string>("PizzaTemplate");

                    b.HasKey("Id");

                    b.ToTable("PizzaTemplates");
                });

            modelBuilder.Entity("PizzaPortal.Infrastructure.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("AddressId");

                    b.Property<DateTime>("DateOfCreation");

                    b.Property<DateTime>("DateOfUpdate");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("LastName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PizzaPortal.Infrastructure.Image", b =>
                {
                    b.HasOne("PizzaPortal.Infrastructure.PizzaTemplates", "PizzaTemplates")
                        .WithMany("Images")
                        .HasForeignKey("PizzaTemplatesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaPortal.Infrastructure.Ingredient", b =>
                {
                    b.HasOne("PizzaPortal.Infrastructure.PizzaTemplates", "PizzaTemplates")
                        .WithMany("Ingredients")
                        .HasForeignKey("PizzaTemplatesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaPortal.Infrastructure.User", b =>
                {
                    b.HasOne("PizzaPortal.Infrastructure.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });
#pragma warning restore 612, 618
        }
    }
}
